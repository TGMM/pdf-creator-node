/**
 * @author Shyam Hajare <hajareshyam@gmail.com>
 */

/**
 * create function is used to create pdf from handlebar templates.
 * @param  {document, options}
 * @return {callback}
 */

 import { ReadStream } from "fs";
 import Handlebars from "handlebars";
 import pdf from "html-pdf";
 
 export interface DocumentData {
   users: string;
 }
 
 export interface PdfDocument {
   html: string;
   data?: DocumentData;
   path: string;
   type: "stream" | "buffer" | "";
 }
 
 export function create(
   document: PdfDocument,
   options?: pdf.CreateOptions
 ): Promise<Buffer | ReadStream | pdf.FileInfo> {
   return new Promise((resolve, reject) => {
     if (!document || !document.html || !document.data) {
       reject(new Error("Some, or all, options are missing."));
     }
     // Compiles a template
     const html = Handlebars.compile(document.html)(document.data);
     const pdfPromise = pdf.create(html, options);
 
     // Create PDF from html template generated by handlebars
     // Output will be PDF file
 
     switch (document.type) {
     case "buffer":
       pdfPromise.toBuffer((err, res) => {
         if (!err) resolve(res);
         else reject(err);
       });
       break;
 
     case "stream":
       pdfPromise.toStream((err, res) => {
         if (!err) resolve(res);
         else reject(err);
       });
       break;
 
     default:
       pdfPromise.toFile(document.path, (err, res) => {
         if (!err) resolve(res);
         else reject(err);
       });
       break;
     }
   });
 }
 